{"version":3,"file":"static/js/844.7962bcf1.chunk.js","mappings":"0NACA,EAAsB,wBAAtB,EAAqD,yBAArD,EAAuF,2B,SCevF,MAZA,SAAoBA,GAClB,OACE,gBAAKC,UAAWC,EAAY,UAC1B,SAAC,KAAO,CAACD,UAAW,SAAAE,GAAO,OACzBA,EAAQC,SAAQ,UAAMF,EAAY,YAAIA,GAAmBA,CAAY,EACrEG,GAAE,iBAAYL,EAAMM,MAAO,SAC1BN,EAAMM,QAIf,ECbA,GAAgB,mBAAmB,sCAAsC,OAAS,6BCG5EC,EAAU,CAAC,QAAS,aAAc,QAAS,WAAY,OAAQ,WAAY,UAcjF,ICZIC,EDYJ,EAZA,WACI,OAEI,iBAAKP,UAAWC,EAAAA,oBAA4B,WACxC,eAAID,UAAWC,EAAAA,MAAc,uBAC7B,gBAAKD,UAAWC,EAAAA,OAAe,SAC1BK,EAAQE,KAAI,SAACH,EAAMI,GAAC,OAAK,SAAC,EAAU,CAASJ,KAAMA,GAATI,EAAgB,QAI3E,E,oBEfA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAA2F,8BAA3F,EAAsI,8BAAtI,EAA8K,2BAA9K,EAA+M,uBAA/M,EAAoP,+BAApP,EAA2R,yB,UDmD3R,MA1CA,SAAmB,GAAsB,IAApBJ,EAAI,EAAJA,KAAMK,EAAS,EAATA,UAEjBC,GAAWC,EAAAA,EAAAA,MAiBjB,OACI,iBAAKZ,UAAWC,EAAa,WACzB,gBAAKD,UAAWC,EAAY,UACxB,gBAAKY,IAAKR,EAAKS,IAAKC,IAAKV,EAAKW,WAGlC,iBAAKhB,UAAWC,EAAa,WACzB,eAAID,UAAWC,EAAsB,SAAEI,EAAKY,QAE5C,iBAAKjB,UAAWC,EAAmB,WAC/B,SAAC,KAAI,CAACD,UAAWC,EAAiBG,GAAG,IAAG,yBACxC,mBAAQJ,UAAWC,EAAwBiB,QA3BtC,YACjBC,EAAAA,EAAAA,GAAeR,EAAUN,GAMzBK,GAAU,GAEVU,aAAab,GACbA,EAAQc,YAAW,kBAAMX,GAAU,EAAM,GAAE,IAP/C,EAwBiF,UAC7D,6BAMZ,iBAAKV,UAAWC,EAAc,UAAEI,EAAKiB,MAAK,SAGtD,EEjDA,GAAgB,kBAAkB,oCAAoC,MAAQ,2B,UC2B9E,MArBA,SAAoB,GAA+B,IAA9BC,EAAU,EAAVA,WAAmBC,GAAF,EAALC,MAAc,EAAPD,SAC9BE,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQ,IAC3CC,GAASC,EAAAA,EAAAA,MACXC,GAAY,OAAON,GAMvB,MAJyB,QAAtBI,EAAOG,aACND,EAAeN,EAAMQ,QAAO,SAAA7B,GAAI,OAAIA,EAAK8B,OAASL,EAAOG,UAAU,MAInE,iBAAKjC,UAAWC,EAAAA,mBAA2B,WACvC,eAAID,UAAWC,EAAAA,MAAc,uBAC5BuB,IAAW,SAACY,EAAA,EAAc,KAC3B,gBAAKpC,UAAWC,EAAAA,MAAc,SACzB+B,EAAaxB,KAAI,SAAAH,GAAI,OAAI,SAAC,EAAS,CAACK,UAAWa,EAA0BlB,KAAMA,GAAfA,EAAKgC,GAAkB,OAE5F,SAAC,KAAM,MAGnB,ECzBA,EAAwB,qBAAxB,EAAuD,uBAAvD,EAAwF,uBAAxF,EAAwH,sB,oBC8BxH,MA5BA,SAAiBC,GACf,OAA8BC,EAAAA,EAAAA,YAAU,eAAjCf,EAAO,KAAEgB,EAAU,KAC1B,GAA4BD,EAAAA,EAAAA,YAAU,eAA/BE,EAAM,KAAEC,EAAS,KACxB,GAA0BH,EAAAA,EAAAA,YAAU,eAA7Bd,EAAK,KAAEkB,EAAQ,KAEhBC,GAAcC,EAAAA,EAAAA,aAAW,yCAC7B,WAAgBC,GAAa,sEACV,OAAjBN,GAAW,GAAM,kBAETF,EAAgBQ,GAAe,KAAD,EACpCN,GAAW,GACXE,EAAU,WAAU,gDAEpBF,GAAW,GACXG,EAAS,KAAMI,SAAW,yBAAwB,yDAErD,mDAX4B,GAY7B,CAACT,IAGH,MAAO,CACLM,YAAAA,EACApB,QAAAA,EACAiB,OAAAA,EACAhB,MAAAA,EAEJ,ECSA,MA5BA,WACE,IAAMd,GAAWC,EAAAA,EAAAA,MACjB,EAAwCoC,EAAQC,EAAAA,GAAxCL,EAAW,EAAXA,YAAapB,EAAO,EAAPA,QAASC,EAAK,EAALA,MAC9B,GAAkCc,EAAAA,EAAAA,WAAS,GAAM,eAA1CW,EAAS,KAAEC,EAAY,KAM9B,OALAC,EAAAA,EAAAA,YAAU,WACRR,EAAYjC,EAEd,GAAG,CAACA,EAAUiC,KAGZ,8BACE,UAACS,EAAA,EAAS,CAACpD,QAAQ,mBAAkB,WACnC,gBAAKD,UAAWC,EAAgB,UAC9B,iBAAMD,UAAS,UAAKC,EAAe,YAAIiD,EAAYjD,EAAiB,IAAK,4CAG3E,iBAAKD,UAAWC,EAAc,WAC5B,SAAC,EAAW,KACZ,SAAC,EAAU,CAACsB,WAAY4B,EAAc3B,QAASA,EAASC,MAAOA,WAQzE,C","sources":["webpack://valerias-bakery/./src/pages/Store/components/FilterItem.module.css?8abf","pages/Store/components/FilterItem.js","webpack://valerias-bakery/./src/pages/Store/components/StoreFilter.module.css?60fe","pages/Store/components/StoreFilter.js","pages/Store/components/StoreItem.js","webpack://valerias-bakery/./src/pages/Store/components/StoreItem.module.css?ba74","webpack://valerias-bakery/./src/pages/Store/components/StoreItems.module.css?5360","pages/Store/components/StoreItems.js","webpack://valerias-bakery/./src/pages/Store/Store.module.css?6670","hooks/use-http.js","pages/Store/Store.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"FilterItem_box__126n0\",\"link\":\"FilterItem_link__ekd-A\",\"active\":\"FilterItem_active__VJ9n0\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport classes from './FilterItem.module.css'\r\n\r\nfunction FilterItem(props) {\r\n  return (\r\n    <div className={classes.box}>\r\n      <NavLink className={navData =>\r\n        navData.isActive ? `${classes.link} ${classes.active}` : classes.link}\r\n        to={`/store/${props.item}`}>\r\n        {props.item}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterItem","// extracted by mini-css-extract-plugin\nexport default {\"filter-container\":\"StoreFilter_filter-container__uf3kV\",\"filter\":\"StoreFilter_filter__daorH\"};","import React from 'react'\r\nimport FilterItem from './FilterItem';\r\nimport classes from './StoreFilter.module.css';\r\n\r\nconst filters = ['bread', 'croissants', 'cakes', 'cupcakes', 'pies', 'danishes', 'donuts'];\r\n\r\nfunction StoreFilter() {\r\n    return (\r\n\r\n        <div className={classes['filter-container']}>\r\n            <h3 className={classes.title}>Filters:</h3>\r\n            <div className={classes.filter}>\r\n                {filters.map((item, i) => <FilterItem key={i} item={item}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StoreFilter","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './StoreItem.module.css'\r\nimport {addCartHandler} from '../../../api/api';\r\n\r\nlet timer;\r\n\r\n\r\n\r\nfunction StoreItem({ item, onMessage }) {\r\n\r\n    const dispatch = useDispatch();\r\n    const onAddHandler = () => {\r\n        addCartHandler(dispatch, item);\r\n        message();\r\n    }\r\n    // const cartTotal = useSelector(state => state.cart.totalPrice)\r\n\r\n    function message() {\r\n        onMessage(true);\r\n\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => onMessage(false), 5000);\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.item}>\r\n            <div className={classes.img}>\r\n                <img src={item.img} alt={item.title} />\r\n            </div>\r\n\r\n            <div className={classes.info}>\r\n                <h4 className={classes['item-title']}>{item.name}</h4>\r\n\r\n                <div className={classes.activities}>\r\n                    <Link className={classes.details} to='/'>Details...</Link>\r\n                    <button className={classes['add-to-cart']} onClick={onAddHandler}>\r\n                        <span></span>\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={classes.price}>{item.price}$</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StoreItem","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"StoreItem_item__uzjEF\",\"info\":\"StoreItem_info__6rCis\",\"item-title\":\"StoreItem_item-title__b4fzx\",\"activities\":\"StoreItem_activities__0DQI6\",\"details\":\"StoreItem_details__AyCZq\",\"img\":\"StoreItem_img__A2pwD\",\"add-to-cart\":\"StoreItem_add-to-cart__uPzcD\",\"price\":\"StoreItem_price__rk752\"};","// extracted by mini-css-extract-plugin\nexport default {\"items-container\":\"StoreItems_items-container__-Qps-\",\"items\":\"StoreItems_items__mecVJ\"};","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Outlet, useParams } from 'react-router-dom'\r\nimport StoreItem from './StoreItem';\r\nimport classes from './StoreItems.module.css';\r\nimport LoadingSpinner from '../../../common/components/LoadingSpinner';\r\n\r\nfunction StoreItems({setMessage, error, loading}) {\r\n    const cards = useSelector(state => state.allItems);\r\n    const params = useParams();\r\n    let filtredItems = [...cards];\r\n\r\n    if(params.filterName !== 'all') {\r\n        filtredItems = cards.filter(item => item.type === params.filterName);\r\n    }   \r\n\r\n    return (\r\n        <div className={classes['items-container']}>\r\n            <h3 className={classes.title}>Products:</h3>\r\n            {loading && <LoadingSpinner/>}\r\n            <div className={classes.items}>\r\n                {filtredItems.map(item => <StoreItem onMessage={setMessage} key={item.id} item={item} />)}\r\n            </div>\r\n            <Outlet />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StoreItems","// extracted by mini-css-extract-plugin\nexport default {\"store\":\"Store_store__CuQlJ\",\"message\":\"Store_message__RAsUH\",\"content\":\"Store_content__hrlA6\",\"active\":\"Store_active__4Zq6N\"};","import { useCallback, useState } from 'react';\n\n\nfunction useHttp(requestFunction) {\n  const [loading, setLoading] = useState();\n  const [status, setStatus] = useState();\n  const [error, setError] = useState();\n\n  const sendRequest = useCallback(\n    async function (reduxDispatch) {\n      setLoading(true);\n      try {\n        await requestFunction(reduxDispatch);\n        setLoading(false);\n        setStatus('Success')\n      } catch (error) {\n        setLoading(false);\n        setError(error.message || 'Something went wrong!')\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    loading,\n    status,\n    error\n  };\n}\n\nexport default useHttp;\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport Container from '../../common/components/UI/Container'\r\nimport StoreFilter from './components/StoreFilter';\r\nimport StoreItems from './components/StoreItems';\r\nimport classes from './Store.module.css'\r\nimport useHttp from '../../hooks/use-http';\r\nimport getAllItems from '../../api/api';\r\n\r\n\r\nfunction Store() {\r\n  const dispatch = useDispatch();\r\n  const { sendRequest, loading, error } = useHttp(getAllItems);\r\n  const [isMessage, setIsMessage] = useState(false);\r\n  useEffect(() => {\r\n    sendRequest(dispatch);\r\n    \r\n  }, [dispatch, sendRequest]);\r\n\r\n  return (\r\n    <section>\r\n      <Container classes=\"store__container\">\r\n        <div className={classes.message}>\r\n          <span className={`${classes.content} ${isMessage ? classes.active : ''}`}>Successfully added to cart!</span>\r\n        </div>\r\n\r\n        <div className={classes.store}>\r\n          <StoreFilter />\r\n          <StoreItems setMessage={setIsMessage} loading={loading} error={error} />\r\n    \r\n        </div>\r\n      </Container>\r\n\r\n    </section >\r\n\r\n  )\r\n}\r\n\r\nexport default Store\r\n"],"names":["props","className","classes","navData","isActive","to","item","filters","timer","map","i","onMessage","dispatch","useDispatch","src","img","alt","title","name","onClick","addCartHandler","clearTimeout","setTimeout","price","setMessage","loading","error","cards","useSelector","state","allItems","params","useParams","filtredItems","filterName","filter","type","LoadingSpinner","id","requestFunction","useState","setLoading","status","setStatus","setError","sendRequest","useCallback","reduxDispatch","message","useHttp","getAllItems","isMessage","setIsMessage","useEffect","Container"],"sourceRoot":""}